CREATE SCHEMA IF NOT EXISTS PUBLIC;

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	GENRE_ID INTEGER,
	RATING_ID INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FILMS_RATING_FK FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(ID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	USER_NAME CHARACTER VARYING(50) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_PK PRIMARY KEY (FILM_ID,USER_ID),
	CONSTRAINT LIKES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT LIKES_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIEND (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	IS_APPROVED BOOLEAN NOT NULL,
	CONSTRAINT FRIEND_PK PRIMARY KEY (USER_ID,FRIEND_ID),
	CONSTRAINT FRIEND_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FRIEND_USERS_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);